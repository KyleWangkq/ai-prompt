project:
  basePackage: com.bytz.cms.payment
  name: payment-service
  description: 莱宝经销商订单交易系统 - 支付模块（用例驱动的DDD YAML规范，基于支付模块需求设计文档v1.5、支付模块用例模型文档v1.0、全局术语表v3.0）
  version: v2.0
  author: DDD设计团队
  updateDate: 2025-01-15
  baseDocuments:
    - 支付模块需求设计文档 v1.5
    - 支付模块用例模型文档 v1.0
    - 支付模块全局术语表 v3.0
    - DDD设计文档Prompt设计说明书

# Enumerations (枚举类型定义)
enumerations:
  - name: PaymentType
    description: |
      支付类型枚举，区分支付单的业务类型。
      术语来源：Glossary.md - 状态和枚举术语"支付类型(Payment Type)"
      需求来源：需求文档3.2节、4.4.1节
    values:
      - ADVANCE_PAYMENT # 预付款
      - FINAL_PAYMENT # 尾款
      - OTHER_PAYMENT # 其他费用
      - CREDIT_REPAYMENT # 信用还款

  - name: PaymentStatus
    description: |
      支付状态枚举，标识支付单当前的支付进度状态。
      术语来源：Glossary.md - 状态和枚举术语"支付状态(Payment Status)"
      需求来源：需求文档3.3.1节
      状态转换：UNPAID → PAYING → PARTIAL_PAID/PAID/FAILED，支持STOPPED和FROZEN状态
    values:
      - UNPAID # 未支付
      - PAYING # 支付中
      - PARTIAL_PAID # 部分支付
      - PAID # 已支付
      - FAILED # 支付失败
      - STOPPED # 已停止
      - FROZEN # 已冻结

  - name: RefundStatus
    description: |
      退款状态枚举，标识支付单的退款进度状态。
      术语来源：Glossary.md - 状态和枚举术语"退款状态(Refund Status)"
      需求来源：需求文档3.3.2节
      状态转换：NO_REFUND → REFUNDING → PARTIAL_REFUNDED/FULL_REFUNDED/REFUND_FAILED
    values:
      - NO_REFUND # 未退款
      - REFUNDING # 退款中
      - PARTIAL_REFUNDED # 部分退款
      - FULL_REFUNDED # 全额退款
      - REFUND_FAILED # 退款失败

  - name: TransactionType
    description: |
      流水类型枚举，区分正向支付和逆向退款。
      术语来源：Glossary.md - 状态和枚举术语"流水类型(Transaction Type)"
      需求来源：需求文档4.4.2节
    values:
      - PAYMENT # 支付（正向资金流动）
      - REFUND # 退款（逆向资金流动）

  - name: TransactionStatus
    description: |
      流水状态枚举，标识单笔流水的处理状态。
      术语来源：Glossary.md - 状态和枚举术语"流水状态(Transaction Status)"
      需求来源：需求文档4.4.2节
      状态转换：PROCESSING → SUCCESS/FAILED
    values:
      - PROCESSING # 处理中
      - SUCCESS # 成功
      - FAILED # 失败

  - name: PaymentChannel
    description: |
      支付渠道枚举，标识支付使用的渠道类型。
      术语来源：Glossary.md - 状态和枚举术语"支付渠道类型(Payment Channel Type)"
      需求来源：需求文档3.1节、4.5节
    values:
      - ONLINE_PAYMENT # 线上支付（银联、网银等）
      - WALLET_PAYMENT # 钱包支付（企业寄存资金）
      - WIRE_TRANSFER # 电汇支付（银行转账）
      - CREDIT_ACCOUNT # 信用账户（企业信用额度）

  - name: RelatedBusinessType
    description: |
      关联业务类型枚举，标识支付单关联的业务场景。
      术语来源：Glossary.md - 状态和枚举术语"关联业务类型(Related Business Type)"
      需求来源：需求文档3.2节、4.4.1节
    values:
      - CREDIT_RECORD # 信用记录（信用还款场景）
      - DELIVERY_ORDER # 提货单（提货费用场景）
      - ORDER # 订单（普通支付场景）

# Aggregate Definitions
aggregates:
  - name: Payment
    description: |
      支付单聚合根，管理支付金额、状态与退款等业务，涵盖普通支付与信用还款两类。
      作为核心聚合根，负责支付单的完整生命周期管理，包括创建、支付执行、退款处理、状态管理。
      术语来源：Glossary.md - 核心业务术语"支付单(Payment)"
      需求来源：需求文档4.1节支付单管理、4.4节支付单数据模型
      相关用例：UC-PM-001至UC-PM-009
    fields:
      - name: id
        type: String
        description: 支付单号，唯一标识（32位字符，全局唯一）
      - name: orderId
        type: String
        description: 关联订单号（32位字符）
      - name: resellerId
        type: String
        description: 经销商ID（买方标识，32位字符，必填）
      - name: paymentAmount
        type: BigDecimal
        description: 目标支付金额（6位小数，必须为正数）
      - name: paidAmount
        type: BigDecimal
        description: 已支付金额（6位小数，累计成功支付金额，初始值0）
      - name: refundedAmount
        type: BigDecimal
        description: 已退款金额（6位小数，累计成功退款金额，初始值0）
      - name: actualAmount
        type: BigDecimal
        description: 实际收款金额（6位小数，计算公式：paidAmount - refundedAmount）
      - name: currency
        type: String
        description: 币种（固定为CNY人民币，3位字符）
      - name: paymentType
        type: PaymentType
        description: 支付类型枚举：ADVANCE_PAYMENT(预付款)/FINAL_PAYMENT(尾款)/OTHER_PAYMENT(其他费用)/CREDIT_REPAYMENT(信用还款)
      - name: paymentStatus
        type: PaymentStatus
        description: 支付状态枚举：UNPAID(未支付)/PAYING(支付中)/PARTIAL_PAID(部分支付)/PAID(已支付)/FAILED(支付失败)/STOPPED(已停止)/FROZEN(已冻结)
      - name: refundStatus
        type: RefundStatus
        description: 退款状态枚举：NO_REFUND(未退款)/REFUNDING(退款中)/PARTIAL_REFUNDED(部分退款)/FULL_REFUNDED(全额退款)/REFUND_FAILED(退款失败)
      - name: paymentDeadline
        type: LocalDateTime
        description: 支付截止时间（可选，建议的支付完成时间）
      - name: relatedBusinessId
        type: String
        description: 关联业务ID（32位字符，可选，如信用记录ID、提货单ID等）
      - name: relatedBusinessType
        type: RelatedBusinessType
        description: 关联业务类型枚举（可选，如CREDIT_RECORD/DELIVERY_ORDER/ORDER等）
      - name: businessExpireDate
        type: LocalDateTime
        description: 关联业务到期日（可选，如信用还款到期日、提货到期日等）
      - name: businessDesc
        type: String
        description: 业务描述（500位字符，可选，支付用途说明）
      - name: businessTags
        type: String
        description: 业务标签（JSON字符串，可选，相关业务标记）
      - name: delFlag
        type: Integer
        description: 删除状态（0-正常，1-删除）
      - name: createBy
        type: String
        description: 创建人ID（32位字符）
      - name: createByName
        type: String
        description: 创建人姓名（32位字符）
      - name: createdTime
        type: LocalDateTime
        description: 创建时间（必填）
      - name: updateBy
        type: String
        description: 更新人ID（32位字符）
      - name: updateByName
        type: String
        description: 更新人姓名（32位字符）
      - name: updatedTime
        type: LocalDateTime
        description: 更新时间（必填）
    behaviors:
      - name: create
        description: |
          接收并创建支付单（UC-PM-001 / UC-PM-007），初始化为UNPAID并完成基础校验。
          用例来源：UC-PM-001接收支付单创建请求（普通支付）、UC-PM-007创建信用还款支付单
          业务规则：支付单号必须唯一，支付金额必须为正数
          信用还款说明：信用还款支付单通过设置paymentType=CREDIT_REPAYMENT和relatedBusinessType=CREDIT_RECORD来标识，创建流程与普通支付单一致。
        params: [orderId:String, resellerId:String, paymentAmount:BigDecimal, currency:String, paymentType:PaymentType, paymentDeadline:LocalDateTime, relatedBusinessId:String, relatedBusinessType:RelatedBusinessType, businessExpireDate:LocalDateTime, businessDesc:String, businessTags:String]
      - name: markPaying
        description: |
          将支付单状态置为PAYING（提交支付后，合并支付场景保持一致）。
          用例来源：UC-PM-003执行支付操作、UC-PM-008执行信用还款支付
          状态转换：UNPAID → PAYING
        params: []
      - name: applyPayment
        description: |
          应用一次支付成功的回调，增加已支付金额、重算实际收款并更新状态（UC-PM-004）。
          用例来源：UC-PM-004处理支付回调
          金额计算：paidAmount += amount, actualAmount = paidAmount - refundedAmount
          状态更新：根据待支付金额是否为0自动更新为PARTIAL_PAID或PAID
        params: [amount:BigDecimal, channel:PaymentChannel, channelTransactionNumber:String, finishedAt:LocalDateTime]
      - name: applyRefund
        description: |
          应用一次退款成功记录，增加已退款金额、重算实际收款并更新退款状态（UC-PM-006）。
          用例来源：UC-PM-006接收退款执行指令
          金额计算：refundedAmount += amount, actualAmount = paidAmount - refundedAmount
          状态更新：根据退款比例更新为PARTIAL_REFUNDED或FULL_REFUNDED
        params: [amount:BigDecimal, originalTransactionId:String, businessOrderId:String, reason:String]
      - name: updateStatusByAmounts
        description: |
          根据待支付金额是否为0自动计算并更新支付状态（UNPAID/PARTIAL_PAID/PAID）与退款状态。
          业务规则：待支付金额 = paymentAmount - paidAmount
          支付状态：待支付金额 = 0 → PAID，待支付金额 > 0 且 paidAmount > 0 → PARTIAL_PAID
          退款状态：refundedAmount = paidAmount → FULL_REFUNDED，0 < refundedAmount < paidAmount → PARTIAL_REFUNDED
        params: []
      - name: validatePayable
        description: |
          校验当前支付单是否允许支付（状态、金额、截止时间等）。
          用例来源：UC-PM-003执行支付操作前置校验
          验证规则：状态必须为UNPAID或PARTIAL_PAID，待支付金额必须>0，未超过截止时间
        params: []
      - name: validateRefundable
        description: |
          校验当前支付单是否允许退款（状态、可退款金额等）。
          用例来源：UC-PM-006退款执行前置校验
          验证规则：支付状态必须为PAID或PARTIAL_PAID，可退款金额 = paidAmount - refundedAmount >= refundAmount
        params: [refundAmount:BigDecimal]
      - name: freeze
        description: |
          冻结支付单，状态置为FROZEN（异常/风控处理）。
          状态转换：任何可操作状态 → FROZEN
        params: [reason:String]
      - name: unfreeze
        description: |
          解冻支付单，恢复冻结前可执行状态。
          状态转换：FROZEN → 冻结前的状态
        params: []
      - name: stop
        description: |
          终止支付单，状态置为STOPPED（业务强制停止）。
          状态转换：任何状态 → STOPPED（不可逆）
        params: [reason:String]
    rules:
      - description: |
          【UC-PM-001-4】支付单号必须唯一，不可重复创建。
          来源：需求文档4.1.1节、用例UC-PM-001步骤4
      - description: |
          【金额约束】支付金额必须为正数（paymentAmount > 0），已支付/已退款/实际收款均为非负数。
          来源：需求文档4.4节数据模型
      - description: |
          【金额一致性】实际收款金额 = 已支付金额 - 已退款金额，且不得为负（actualAmount >= 0）。
          来源：需求文档4.4.1节、需求文档3.2节术语定义
      - description: |
          【支付前置条件】未支付(UNPAID)或部分支付(PARTIAL_PAID)状态才允许继续支付；已支付(PAID)或已终止(STOPPED)不可再支付。
          来源：需求文档3.3.1节支付状态定义
      - description: |
          【退款约束】可退款金额 = 已支付金额 - 已退款金额，退款金额不得超过可退款金额。
          来源：需求文档4.8节退款管理
      - description: |
          【状态转换规则】状态迁移必须受控：UNPAID → PAYING → PARTIAL_PAID/PAID；失败则回滚到原状态。
          来源：需求文档3.3.1节支付状态、4.2节支付执行流程
      - description: |
          【超时处理】截止时间到期仍未支付可触发超时策略（标记、通知或自动停止）。
          来源：需求文档4.9节异常处理与重试机制
      - description: |
          【信用还款规则】信用还款支付单（CREDIT_REPAYMENT）遵循统一支付规则，并在完成后通知信用系统。
          来源：需求文档4.10节信用还款处理、用例UC-PM-007、UC-PM-008

  - name: PaymentTransaction
    description: |
      支付流水实体，记录支付/退款的每次渠道交易与状态。
      作为Payment聚合内的核心实体，统一管理支付和退款流水，通过transactionType区分操作类型。
      术语来源：Glossary.md - 实体术语"支付流水实体(PaymentTransaction Entity)"
      需求来源：需求文档4.4.2节支付流水表设计
      相关用例：UC-PM-003、UC-PM-004、UC-PM-006
    fields:
      - name: id
        type: String
        description: 流水号，唯一标识（32位字符，全局唯一）
      - name: paymentId
        type: String
        description: 关联支付单号（32位字符，外键关联Payment.id）
      - name: transactionType
        type: TransactionType
        description: 流水类型枚举：PAYMENT(支付)/REFUND(退款)
      - name: transactionStatus
        type: TransactionStatus
        description: 流水状态枚举：PROCESSING(处理中)/SUCCESS(成功)/FAILED(失败)
      - name: transactionAmount
        type: BigDecimal
        description: 交易金额（6位小数，支付为正数、退款为负数）
      - name: paymentChannel
        type: PaymentChannel
        description: 支付渠道枚举：ONLINE_PAYMENT(线上支付)/WALLET_PAYMENT(钱包支付)/WIRE_TRANSFER(电汇支付)/CREDIT_ACCOUNT(信用账户)
      - name: channelTransactionNumber
        type: String
        description: 渠道交易号（64位字符，可选，合并支付下用于关联多支付单，同一渠道内应唯一）
      - name: paymentWay
        type: String
        description: 支付方式（20位字符，可选，渠道下的具体方式）
      - name: originalTransactionId
        type: String
        description: 原交易流水号（32位字符，可选，退款回溯支付时使用，关联到被退款的支付流水）
      - name: businessOrderId
        type: String
        description: 业务单号（32位字符，可选，如退款单号）
      - name: businessRemark
        type: String
        description: 业务备注（500位字符，可选，交易备注信息）
      - name: delFlag
        type: Integer
        description: 删除状态（0-正常，1-删除）
      - name: createBy
        type: String
        description: 创建人ID（32位字符）
      - name: createByName
        type: String
        description: 创建人姓名（32位字符）
      - name: createdTime
        type: LocalDateTime
        description: 创建时间（必填）
      - name: completeDatetime
        type: LocalDateTime
        description: 交易完成时间（可选，成功或失败时记录）
      - name: expirationTime
        type: LocalDateTime
        description: 支付过期时间（可选，用于支付超时处理）
      - name: updateBy
        type: String
        description: 更新人ID（32位字符）
      - name: updateByName
        type: String
        description: 更新人姓名（32位字符）
      - name: updatedTime
        type: LocalDateTime
        description: 更新时间（可选）
    behaviors:
      - name: start
        description: |
          创建流水并置为PROCESSING（UC-PM-003-11/12）。
          用例来源：UC-PM-003执行支付操作、UC-PM-006接收退款执行指令
          初始状态：PROCESSING
        params: [paymentId:String, transactionType:TransactionType, transactionAmount:BigDecimal, paymentChannel:PaymentChannel, paymentWay:String, channelTransactionNumber:String, expirationTime:LocalDateTime]
      - name: success
        description: |
          标记流水成功并记录完成时间（对应渠道回调成功，UC-PM-004）。
          用例来源：UC-PM-004处理支付回调
          状态转换：PROCESSING → SUCCESS
        params: [completedAt:LocalDateTime]
      - name: fail
        description: |
          标记流水失败（渠道回调失败或主动失败）。
          状态转换：PROCESSING → FAILED
        params: [reason:String]
    rules:
      - description: |
          【金额类型一致性】交易金额与类型一致性校验：PAYMENT时transactionAmount>0，REFUND时transactionAmount<0。
          来源：需求文档4.4.2节支付流水表设计
      - description: |
          【并发控制】同一支付单同一时刻仅允许一个PROCESSING中的支付流水。
          来源：需求文档4.9节异常处理与重试机制
      - description: |
          【渠道交易号唯一性】渠道交易号在同一渠道内应唯一（用于对账与补偿查询）。
          来源：需求文档4.4.2节、用例UC-PM-009补偿查询支付状态

# Domain Services
domainServices:
  - name: PaymentValidationService
    description: |
      支付单创建与执行前的业务校验（金额、状态、截止时间、唯一性等）。
      领域服务类型：验证服务
      术语来源：Glossary.md - 领域服务术语"支付验证服务"
      相关用例：UC-PM-001、UC-PM-003、UC-PM-006
    methods:
      - name: validateCreate
        description: |
          校验创建请求（UC-PM-001），包含普通支付单和信用还款支付单。
          验证项：支付单号唯一性、金额合法性、必填字段完整性、业务规则符合性。
          用例来源：UC-PM-001步骤3-4、UC-PM-007步骤3-4
      - name: validateExecute
        description: |
          校验执行支付前置条件（UC-PM-003），适用于所有支付类型。
          验证项：支付单状态可支付、待支付金额>0、未超过截止时间、经销商权限。
          用例来源：UC-PM-003步骤3-4
      - name: validateRefund
        description: |
          校验退款前置条件（UC-PM-006）。
          验证项：支付单状态可退款、可退款金额足够、退款流水可选、业务授权。
          用例来源：UC-PM-006步骤2-3

  - name: PaymentExecutionService
    description: |
      统一支付执行编排，包含多支付单合并支付、金额分配与渠道下单，适用于所有支付类型（包括信用还款）。
      领域服务类型：编排服务
      术语来源：Glossary.md - 领域服务术语"支付执行服务(PaymentExecutionService)"
      需求来源：需求文档4.2节支付执行流程、4.10节信用还款处理
      相关用例：UC-PM-003、UC-PM-008
      设计原则：信用还款（paymentType=CREDIT_REPAYMENT）作为普通支付单按统一流程处理，支付成功后通过领域事件通知信用管理系统。
    methods:
      - name: executeUnifiedPayment
        description: |
          根据支付单集合与分配金额执行一次统一支付（UC-PM-003/008），适用于所有支付类型。
          处理流程：验证支付单集合 → 验证金额分配 → 调用渠道支付 → 创建支付流水 → 更新支付单状态 → 发布领域事件（信用还款支付单会触发CreditRepaymentCompletedEvent）。
          支持场景：单支付单支付（特例）、多支付单合并支付（统一流程）、信用还款支付单（作为普通支付处理）。
          用例来源：UC-PM-003步骤5-12、UC-PM-008步骤4-11
      - name: allocateAmounts
        description: |
          校验并应用各支付单的金额分配，不得超过各自待支付金额。
          验证规则：每个支付单的分配金额 <= 待支付金额，总分配金额 = 支付渠道支付金额。
          用例来源：UC-PM-003步骤6

  - name: PaymentCallbackService
    description: |
      支付/退款回调处理，签名校验、落地流水、联动支付单状态更新与通知。
      领域服务类型：集成服务
      术语来源：Glossary.md - 技术概念"回调(Callback)"
      需求来源：需求文档4.6节支付回调处理
      相关用例：UC-PM-004
    methods:
      - name: processPaymentCallback
        description: |
          处理支付回调（UC-PM-004），更新流水与支付单。
          处理流程：验证回调签名 → 查找支付流水 → 更新流水状态 → 调用支付单applyPayment → 发布领域事件 → 通知相关系统。
          用例来源：UC-PM-004步骤1-9
      - name: processRefundCallback
        description: |
          处理退款回调，更新流水与支付单。
          处理流程：验证回调签名 → 查找退款流水 → 更新流水状态 → 调用支付单applyRefund → 发布领域事件 → 通知相关系统。
          需求来源：需求文档4.8节退款管理

  - name: RefundService
    description: |
      退款执行编排，支持最新流水退款/指定流水退款/多流水分摊。
      领域服务类型：编排服务（原名RefundExecutionService，简化为RefundService）
      术语来源：Glossary.md - 领域服务术语"退款执行服务"
      需求来源：需求文档4.8节退款管理
      相关用例：UC-PM-006
    methods:
      - name: executeRefund
        description: |
          按策略选择流水并下发渠道退款（UC-PM-006）。
          处理流程：接收退款指令 → 验证退款前置条件 → 选择退款流水（最新流水/指定流水/多流水分摊） → 调用渠道退款 → 创建退款流水 → 更新支付单状态。
          流水选择策略：指定流水退款、最新流水退款、多流水分摊退款。
          用例来源：UC-PM-006步骤1-8

  - name: PaymentQueryService
    description: |
      支付查询与统计（筛选支付单、查询支付单/流水/进度等）。
      领域服务类型：查询服务
      需求来源：需求文档4.3节支付筛选与批量管理、4.7节支付结果查询
      相关用例：UC-PM-002、UC-PM-005
    methods:
      - name: filterPayments
        description: |
          支持状态/类型/时间/金额/渠道等筛选（UC-PM-002）。
          筛选条件：支付单状态、支付类型、订单范围、金额范围、时间范围、经销商ID、关联业务类型。
          用例来源：UC-PM-002步骤1-4
      - name: queryPaymentDetail
        description: |
          查询支付单详情与流水历史（UC-PM-005）。
          查询内容：支付单基础信息、支付进度、退款进度、支付流水历史、退款流水历史、关联订单信息。
          用例来源：UC-PM-005步骤1-3

  - name: PaymentReconciliationService
    description: |
      渠道状态补偿与对账，处理回调超时、状态不一致等。
      领域服务类型：补偿服务
      需求来源：需求文档4.9节异常处理与重试机制
      相关用例：UC-PM-009
    methods:
      - name: compensateAndSyncStatus
        description: |
          基于渠道交易号进行状态补偿查询并与本地状态对齐（UC-PM-009）。
          处理流程：查询本地支付流水 → 调用渠道查询接口 → 比对状态差异 → 同步更新本地状态 → 触发支付单状态重算。
          触发场景：回调超时、状态不一致、用户手动刷新、定时任务批量检查。
          用例来源：UC-PM-009步骤1-7

# Application Services（应用服务）
applicationServices:
  - name: PaymentApplicationService
    description: |
      支付单应用服务，协调支付单的创建、退款等用例。
      服务类型：应用服务（用例编排）
      实现接口：IPaymentInternalService（内部Java接口）
      职责：不包含业务逻辑，仅负责用例协调和事件发布
    methods:
      - name: createPayment
        description: |
          创建支付单（内部接口）
          使用场景：订单系统创建订单后调用、信用管理系统创建信用还款支付单
          输入：CreatePaymentCommand
          输出：PaymentAggregate
          事件：发布PaymentCreatedEvent
      - name: executeRefund
        description: |
          执行退款（内部接口）
          使用场景：订单系统发起退款审批通过后调用
          输入：ExecuteRefundCommand
          输出：退款流水号（String）
          事件：发布RefundExecutedEvent

  - name: PaymentExecutionApplicationService
    description: |
      支付执行应用服务，协调批量支付执行、支付渠道查询等用例。
      服务类型：应用服务（用例编排）
      职责：协调领域服务和基础设施层，不包含业务逻辑
    methods:
      - name: executeBatchPayment
        description: |
          执行批量支付（外部REST接口后端处理）
          使用场景：前端提交批量支付请求
          输入：ExecutePaymentCommand
          输出：渠道交易号（String）
          委托：PaymentDomainService.executeBatchPayment
      - name: queryAvailableChannels
        description: |
          查询经销商可用的支付渠道列表（外部REST接口）
          使用场景：前端查询可用支付渠道
          输入：resellerId（String）
          输出：List<PaymentChannel>
          逻辑：过滤渠道可用性、验证经销商权限
      - name: queryChannelAvailabilityDetails
        description: |
          查询经销商支付渠道详细信息（外部REST接口）
          使用场景：前端显示渠道可用性及原因
          输入：resellerId（String）
          输出：Map<PaymentChannel, ChannelAvailability>
          逻辑：返回每个渠道的可用状态和不可用原因

# REST API Interfaces（对外REST接口）
restInterfaces:
  - name: PaymentController
    path: /api/v1/payments
    description: |
      支付单REST控制器，提供支付相关的HTTP接口。
      职责：处理HTTP请求、参数验证、RO/VO转换、调用应用服务
    endpoints:
      - method: POST
        path: /batch-pay
        name: 批量支付接口
        description: |
          前端调用批量支付接口，支持多个支付单合并支付。
          使用场景：经销商选择多个待支付单进行合并支付
        requestBody: BatchPaymentExecuteRO
        responseBody: BatchPaymentResultVO
        validation: |
          - 支付单列表不能为空
          - 支付渠道必须有效
          - 每个支付单的金额必须大于0
        workflow: |
          1. 接收BatchPaymentExecuteRO请求
          2. 从上下文/请求头获取经销商ID
          3. 转换paymentCode为paymentId（数据库主键）
          4. 验证支付单归属
          5. 调用PaymentExecutionApplicationService.executeBatchPayment
          6. 构建BatchPaymentResultVO响应
          7. 返回渠道交易号和支付结果
      
      - method: GET
        path: /available-channels
        name: 查询可用支付渠道接口
        description: |
          查询当前经销商可用的支付渠道列表。
          使用场景：前端显示支付渠道选择列表
        requestParams:
          - name: X-Reseller-Id
            location: header
            required: false
            description: 经销商ID（从认证上下文获取）
        responseBody: List<PaymentChannelVO>
        workflow: |
          1. 从上下文/请求头获取经销商ID
          2. 调用PaymentExecutionApplicationService.queryAvailableChannels
          3. 转换PaymentChannel枚举为PaymentChannelVO
          4. 返回可用渠道列表
      
      - method: POST
        path: /
        name: 创建支付单接口（已废弃）
        deprecated: true
        description: |
          ⚠️ 已废弃：支付单创建应该由系统内部调用（IPaymentInternalService.createPayment），不应该通过外部REST接口创建。
          请使用内部Java接口进行支付单创建。

# Internal Java Interfaces（内部Java接口）
internalInterfaces:
  - name: IPaymentInternalService
    package: com.bytz.modules.cms.payment.application
    description: |
      支付内部服务接口，提供给其他模块调用的Java内部接口。
      使用方式：通过Spring依赖注入，在其他模块中注入此接口
      实现类：PaymentApplicationService
      注意：此接口用于内部Java代码调用，不是REST接口
    methods:
      - name: createPayment
        signature: PaymentAggregate createPayment(CreatePaymentCommand command)
        description: |
          创建支付单
          调用方：订单系统、信用管理系统等
          使用场景：
          - 订单系统创建订单后，调用此接口创建支付单
          - 信用管理系统创建信用还款支付单
        parameters:
          - name: command
            type: CreatePaymentCommand
            fields:
              - orderId: 订单号
              - resellerId: 经销商ID
              - paymentAmount: 支付金额
              - currency: 币种（默认CNY）
              - paymentType: 支付类型（ADVANCE_PAYMENT/FINAL_PAYMENT/OTHER_PAYMENT/CREDIT_REPAYMENT）
              - paymentDeadline: 支付截止时间（可选）
              - relatedBusinessId: 关联业务ID（可选，信用还款时必填）
              - relatedBusinessType: 关联业务类型（可选）
              - businessExpireDate: 业务到期日（可选）
              - businessDesc: 业务描述（可选）
              - businessTags: 业务标签（可选）
              - createBy: 创建人ID
              - createByName: 创建人姓名
        returns:
          type: PaymentAggregate
          description: 创建成功的支付单聚合根
        events:
          - PaymentCreatedEvent: 支付单创建成功后发布
      
      - name: executeRefund
        signature: String executeRefund(ExecuteRefundCommand command)
        description: |
          执行退款
          调用方：订单系统
          使用场景：
          - 订单系统发起退款审批通过后，调用此接口执行退款
          - 支持全额退款和部分退款
        parameters:
          - name: command
            type: ExecuteRefundCommand
            fields:
              - refundOrderId: 退款单号（订单系统的退款单号）
              - paymentId: 支付单ID（数据库主键）
              - refundAmount: 退款金额
              - refundReason: 退款原因
              - approvalInfo: 审批信息（JSON格式，可选）
              - refundType: 退款类型（全额/部分，可选）
              - originalTransactionId: 原支付流水ID（必填，指定退款流水）
        returns:
          type: String
          description: 退款流水号
        events:
          - RefundExecutedEvent: 退款执行成功后发布

# DTOs（数据传输对象）
dtos:
  - name: BatchPaymentExecuteRO
    package: com.bytz.modules.cms.payment.interfaces.model
    type: Request Object
    description: 批量支付执行请求对象
    fields:
      - name: paymentItems
        type: List<PaymentItem>
        required: true
        description: 支付单项列表
      - name: paymentChannel
        type: PaymentChannel
        required: true
        description: 支付渠道
    nestedTypes:
      - name: PaymentItem
        fields:
          - name: paymentCode
            type: String
            required: true
            description: 支付单号（业务编码）
          - name: amount
            type: BigDecimal
            required: true
            description: 本次支付金额

  - name: BatchPaymentResultVO
    package: com.bytz.modules.cms.payment.interfaces.model
    type: Value Object
    description: 批量支付结果响应对象
    fields:
      - name: channelTransactionNumber
        type: String
        description: 渠道交易号
      - name: totalAmount
        type: BigDecimal
        description: 支付总金额
      - name: paymentCount
        type: Integer
        description: 支付单数量
      - name: paymentResults
        type: List<PaymentResultItem>
        description: 支付单结果列表
    nestedTypes:
      - name: PaymentResultItem
        fields:
          - name: paymentCode
            type: String
            description: 支付单号
          - name: amount
            type: BigDecimal
            description: 本次支付金额
          - name: transactionId
            type: String
            description: 支付流水号
          - name: success
            type: Boolean
            description: 是否成功
          - name: errorMessage
            type: String
            description: 错误信息（如果失败）

  - name: PaymentChannelVO
    package: com.bytz.modules.cms.payment.interfaces.model
    type: Value Object
    description: 支付渠道响应对象
    fields:
      - name: channelCode
        type: String
        description: 渠道代码
      - name: channelName
        type: String
        description: 渠道名称
      - name: channelDescription
        type: String
        description: 渠道描述
      - name: available
        type: Boolean
        description: 是否可用
      - name: unavailableReason
        type: String
        description: 不可用原因（如果不可用）

